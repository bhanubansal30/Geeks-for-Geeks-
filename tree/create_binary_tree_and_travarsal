#include<iostream>
using namespace std;
#include<queue>
class node{
public:
    int data;
    node* left, *right;
    node(int value){
        data = value;
        left = right = NULL;
    }
};
node* binary(node* root){
    int x;
    cout<<"entr data";
    cin>>x;
    if(x == -1){
        return NULL;
    }
    root = new node(x);
    cout<<"entr the left side"<<x;
    root->left = binary(root->left);
     cout<<"entr the right side"<<x;
    root->right = binary(root->right);
    return root;
}
void preorder(node* bhanu){
    if(bhanu == NULL){
        return;
    }
    cout<<bhanu->data;
    preorder(bhanu->left);
     preorder(bhanu->right);
}
void inorder(node* bhanu){
        if(bhanu == NULL){
        return;
    }
    
    inorder(bhanu->left);
    cout<<bhanu->data;
    inorder(bhanu->right);
}
void postorder(node* bhanu){
        if(bhanu == NULL){
        return;
    }
    
    postorder(bhanu->left);
       postorder(bhanu->right);
    cout<<bhanu->data;
}
void levelorder(node* bhanu)
{
    queue<node*>q;
    q.push(bhanu);
    while(!q.empty()){
        node*temp = q.front();
        q.pop();
        cout<<temp->data<<" ";
        if(temp->left != NULL){
            q.push(temp->left);
        }
        if(temp->right != NULL ){
            q.push(temp->right);
        }
    }
}
int main(){
    node* root;
   node* bhanu = binary(root);
   preorder(bhanu);
   inorder(bhanu);
   postorder(bhanu);
   cout<<endl;
   
   levelorder(bhanu);
    
    
}
