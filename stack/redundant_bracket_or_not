//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int checkRedundancy(string si) {
        // code here
        stack<int>s;
        for(int i = 0;i<si.length();i++){
            char ch = si[i];
            if(ch == '(' || ch == '*' || ch == '+' || ch == '-' || ch == '/'){
                s.push(ch);
            }
            else{
                if(ch == ')'){
                    bool isredundant = true;
                    while(s.top() != '(')
                    {
                        char top = s.top();
                        if(top == '+' ||top == '-' ||top == '*' || top == '/'){
                            isredundant = false;
                        }
                        s.pop();
                    }
                    s.pop();
                         if(isredundant == true){
                return 1;
                }
           
            }
            }
            
        }
        return 0;
        
    }
};


//{ Driver Code Starts.

int main(){
    int t;
    scanf("%d",&t);
    while(t--){
        
    
        string s; 
        cin>>s;
        
        Solution obj;
        int res = obj.checkRedundancy(s);
        
        cout<<res<<endl;
        
    }
}

// } Driver Code Ends
